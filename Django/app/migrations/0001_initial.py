# Generated by Django 5.0.6 on 2024-06-28 16:05

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Allcode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=50)),
                ('key', models.CharField(max_length=5)),
                ('valueEn', models.CharField(max_length=50)),
                ('valueVi', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Apple', 'Apple'), ('Vivo', 'Vivo'), ('Xiaomi', 'Xiaomi'), ('Oppo', 'Oppo'), ('Huawei', 'Huawei'), ('realme', 'realme'), ('Lenovo', 'Lenovo'), ('Motorala', 'Motorala'), ('Techno', 'Techno'), ('Sony', 'Sony'), ('Asus', 'Asus'), ('Acer', 'Acer'), ('Dell', 'Dell'), ('HP', 'HP'), ('Samsung', 'Samsung'), ('LG', 'LG'), ('Nokia', 'Nokia')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(blank=True, max_length=11, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='uploads/%Y/%m')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('gender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gender_id', to='app.allcode')),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='role_id', to='app.allcode')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('locality', models.CharField(max_length=200)),
                ('city', models.CharField(max_length=50)),
                ('province', models.CharField(choices=[('An Giang', 'An Giang'), ('Bà Rịa - Vũng Tàu', 'Bà Rịa - Vũng Tàu'), ('Bạc Liêu', 'Bạc Liêu'), ('Bắc Giang', 'Bắc Giang'), ('Bắc Kạn', 'Bắc Kạn'), ('Bắc Ninh', 'Bắc Ninh'), ('Bến Tre', 'Bến Tre'), ('Bình Định', 'Bình Định'), ('Bình Dương', 'Bình Dương'), ('Bình Phước', 'Bình Phước'), ('Bình Thuận', 'Bình Thuận'), ('Cà Mau', 'Cà Mau'), ('Cao Bằng', 'Cao Bằng'), ('Cần Thơ', 'Cần Thơ'), ('Đà Nẵng', 'Đà Nẵng'), ('Đắk Lắk', 'Đắk Lắk'), ('Đắk Nông', 'Đắk Nông'), ('Điện Biên', 'Điện Biên'), ('Đồng Nai', 'Đồng Nai'), ('Đồng Tháp', 'Đồng Tháp'), ('Gia Lai', 'Gia Lai'), ('Hà Giang', 'Hà Giang'), ('Hà Nam', 'Hà Nam'), ('Hà Nội', 'Hà Nội'), ('Hà Tĩnh', 'Hà Tĩnh'), ('Hải Dương', 'Hải Dương'), ('Hải Phòng', 'Hải Phòng'), ('Hậu Giang', 'Hậu Giang'), ('Hòa Bình', 'Hòa Bình'), ('Hưng Yên', 'Hưng Yên'), ('Khánh Hòa', 'Khánh Hòa'), ('Kiên Giang', 'Kiên Giang'), ('Kon Tum', 'Kon Tum'), ('Lai Châu', 'Lai Châu'), ('Lâm Đồng', 'Lâm Đồng'), ('Lạng Sơn', 'Lạng Sơn'), ('Lào Cai', 'Lào Cai'), ('Long An', 'Long An'), ('Nam Định', 'Nam Định'), ('Nghệ An', 'Nghệ An'), ('Ninh Bình', 'Ninh Bình'), ('Ninh Thuận', 'Ninh Thuận'), ('Phú Thọ', 'Phú Thọ'), ('Phú Yên', 'Phú Yên'), ('Quảng Bình', 'Quảng Bình'), ('Quảng Nam', 'Quảng Nam'), ('Quảng Ngãi', 'Quảng Ngãi'), ('Quảng Ninh', 'Quảng Ninh'), ('Quảng Trị', 'Quảng Trị'), ('Sóc Trăng', 'Sóc Trăng'), ('Sơn La', 'Sơn La'), ('Tây Ninh', 'Tây Ninh'), ('Thái Bình', 'Thái Bình'), ('Thái Nguyên', 'Thái Nguyên'), ('Thanh Hóa', 'Thanh Hóa'), ('Thừa Thiên Huế', 'Thừa Thiên Huế'), ('Tiền Giang', 'Tiền Giang'), ('TP Hồ Chí Minh', 'TP Hồ Chí Minh'), ('Trà Vinh', 'Trà Vinh'), ('Tuyên Quang', 'Tuyên Quang'), ('Vĩnh Long', 'Vĩnh Long'), ('Vĩnh Phúc', 'Vĩnh Phúc'), ('Yên Bái', 'Yên Bái')], max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_oder', models.DateTimeField(auto_now_add=True)),
                ('transaction_id', models.CharField(max_length=200, null=True)),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='status_id', to='app.allcode')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('selling_price', models.FloatField()),
                ('description', models.TextField(blank=True, null=True)),
                ('discount', models.IntegerField(choices=[(0, 0), (10, 10), (20, 20), (3, 30), (4, 40), (5, 50), (6, 60), (7, 70), (8, 80), (9, 90), (100, 100)], default=0)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('product_image', models.ImageField(blank=True, null=True, upload_to='products/%Y/%m')),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.brand')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='category_id', to='app.allcode')),
            ],
            options={
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.order')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.product')),
            ],
        ),
        migrations.CreateModel(
            name='ShippingAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.address')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.order')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
